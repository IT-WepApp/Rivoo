/*
 * android/build.gradle (delivery_app)
 * مهيّأ لـ compileSdk/targetSdk = 35 ويعمل مع Gradle 8.5 و AGP 8.3
 */

plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.google.gms.google-services"
    id "dev.flutter.flutter-gradle-plugin"
}


def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace "com.example.delivery_app"

    // يجب أن يكون مساويًا لـ targetSdk
    compileSdk 35
    ndkVersion "26.3.11579264"

    defaultConfig {
        applicationId "com.example.delivery_app"
        minSdk 23
        targetSdk 35

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // JDK 17
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    buildTypes {
        debug {
            // يسمح بإزالة الخطوط الحمراء عن طريق التوقيع الافتراضي
            signingConfig signingConfigs.debug
        }
        release {
            // استخدم signingConfig خاصتك هنا عند رفع التطبيق
            signingConfig signingConfigs.debug
            // مثال لتمكين ضغط الكود:
            // minifyEnabled true
            // proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
            //               "proguard-rules.pro"
        }
    }

    // لو لديك ملفات Kotlin في src/main/kotlin
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }
}

flutter {
    // يشير إلى جذر مصدر Flutter للتطبيق
    source "../.."
}

dependencies {
    // ضع أي تبعيات Android إضافية هنا
    // implementation "androidx.core:core-ktx:1.13.0"
}
